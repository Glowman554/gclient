From a804c47d963198a95889b4cd84b0123f1e2f828d Mon Sep 17 00:00:00 2001
From: janick voss <vossjanick@gmail.com>
Date: Wed, 3 Feb 2021 16:48:19 +0100
Subject: [PATCH 1/2] featured servers

---
 .../client/gui/screen/MultiplayerScreen.java  | 12 +++-
 .../gui/screen/ServerSelectionList.java       | 65 ++++++++++---------
 .../multiplayer/ServerDataFeatured.java       |  8 +++
 .../client/multiplayer/ServerList.java        | 14 +++-
 4 files changed, 65 insertions(+), 34 deletions(-)
 create mode 100644 main/java/net/minecraft/client/multiplayer/ServerDataFeatured.java

diff --git a/main/java/net/minecraft/client/gui/screen/MultiplayerScreen.java b/main/java/net/minecraft/client/gui/screen/MultiplayerScreen.java
index bcf078d..0ee0d97 100644
--- a/main/java/net/minecraft/client/gui/screen/MultiplayerScreen.java
+++ b/main/java/net/minecraft/client/gui/screen/MultiplayerScreen.java
@@ -1,10 +1,10 @@
 package net.minecraft.client.gui.screen;
 
 import com.mojang.blaze3d.matrix.MatrixStack;
-import java.util.List;
 import net.minecraft.client.gui.DialogTexts;
 import net.minecraft.client.gui.widget.button.Button;
 import net.minecraft.client.multiplayer.ServerData;
+import net.minecraft.client.multiplayer.ServerDataFeatured;
 import net.minecraft.client.multiplayer.ServerList;
 import net.minecraft.client.network.LanServerDetector;
 import net.minecraft.client.network.LanServerInfo;
@@ -17,6 +17,8 @@ import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import java.util.List;
+
 @OnlyIn(Dist.CLIENT)
 public class MultiplayerScreen extends Screen {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -236,6 +238,14 @@ public class MultiplayerScreen extends Screen {
          if (serverselectionlist$entry instanceof ServerSelectionList.NormalEntry) {
             this.btnEditServer.field_230693_o_ = true;
             this.btnDeleteServer.field_230693_o_ = true;
+
+            ServerSelectionList.NormalEntry entry = (ServerSelectionList.NormalEntry) serverselectionlist$entry;
+
+            if(entry.getServerData() instanceof ServerDataFeatured) {
+               this.btnEditServer.field_230693_o_ = false;
+               this.btnDeleteServer.field_230693_o_ = false;
+               entry.isFeaturedServer = true;
+            }
          }
       }
 
diff --git a/main/java/net/minecraft/client/gui/screen/ServerSelectionList.java b/main/java/net/minecraft/client/gui/screen/ServerSelectionList.java
index d1783a4..5487942 100644
--- a/main/java/net/minecraft/client/gui/screen/ServerSelectionList.java
+++ b/main/java/net/minecraft/client/gui/screen/ServerSelectionList.java
@@ -5,13 +5,6 @@ import com.google.common.hash.Hashing;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
 import com.mojang.blaze3d.matrix.MatrixStack;
 import com.mojang.blaze3d.systems.RenderSystem;
-import java.net.UnknownHostException;
-import java.util.Collections;
-import java.util.List;
-import java.util.Objects;
-import java.util.concurrent.ScheduledThreadPoolExecutor;
-import java.util.concurrent.ThreadPoolExecutor;
-import javax.annotation.Nullable;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.AbstractGui;
 import net.minecraft.client.gui.chat.NarratorChatListener;
@@ -22,11 +15,7 @@ import net.minecraft.client.multiplayer.ServerList;
 import net.minecraft.client.network.LanServerInfo;
 import net.minecraft.client.renderer.texture.DynamicTexture;
 import net.minecraft.client.renderer.texture.NativeImage;
-import net.minecraft.util.DefaultUncaughtExceptionHandler;
-import net.minecraft.util.IReorderingProcessor;
-import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.SharedConstants;
-import net.minecraft.util.Util;
+import net.minecraft.util.*;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.StringTextComponent;
 import net.minecraft.util.text.TextFormatting;
@@ -37,6 +26,14 @@ import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import javax.annotation.Nullable;
+import java.net.UnknownHostException;
+import java.util.Collections;
+import java.util.List;
+import java.util.Objects;
+import java.util.concurrent.ScheduledThreadPoolExecutor;
+import java.util.concurrent.ThreadPoolExecutor;
+
 @OnlyIn(Dist.CLIENT)
 public class ServerSelectionList extends ExtendedList<ServerSelectionList.Entry> {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -199,6 +196,8 @@ public class ServerSelectionList extends ExtendedList<ServerSelectionList.Entry>
       private DynamicTexture icon;
       private long lastClickTime;
 
+      public boolean isFeaturedServer = false;
+
       protected NormalEntry(MultiplayerScreen p_i50669_2_, ServerData p_i50669_3_) {
          this.owner = p_i50669_2_;
          this.server = p_i50669_3_;
@@ -324,20 +323,23 @@ public class ServerSelectionList extends ExtendedList<ServerSelectionList.Entry>
                }
             }
 
-            if (p_230432_2_ > 0) {
-               if (k1 < 16 && l1 < 16) {
-                  AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 96.0F, 32.0F, 32, 32, 256, 256);
-               } else {
-                  AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 96.0F, 0.0F, 32, 32, 256, 256);
+            if(!isFeaturedServer) {
+               if (p_230432_2_ > 0) {
+                  if (k1 < 16 && l1 < 16) {
+                     AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 96.0F, 32.0F, 32, 32, 256, 256);
+                  } else {
+                     AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 96.0F, 0.0F, 32, 32, 256, 256);
+                  }
                }
-            }
 
-            if (p_230432_2_ < this.owner.getServerList().countServers() - 1) {
-               if (k1 < 16 && l1 > 16) {
-                  AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 64.0F, 32.0F, 32, 32, 256, 256);
-               } else {
-                  AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 64.0F, 0.0F, 32, 32, 256, 256);
+               if (p_230432_2_ < this.owner.getServerList().countServers() - 1) {
+                  if (k1 < 16 && l1 > 16) {
+                     AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 64.0F, 32.0F, 32, 32, 256, 256);
+                  } else {
+                     AbstractGui.func_238463_a_(p_230432_1_, p_230432_4_, p_230432_3_, 64.0F, 0.0F, 32, 32, 256, 256);
+                  }
                }
+
             }
          }
 
@@ -420,14 +422,17 @@ public class ServerSelectionList extends ExtendedList<ServerSelectionList.Entry>
             }
 
             int i = this.owner.serverListSelector.func_231039_at__().indexOf(this);
-            if (d0 < 16.0D && d1 < 16.0D && i > 0) {
-               this.func_228196_a_(i, i - 1);
-               return true;
-            }
 
-            if (d0 < 16.0D && d1 > 16.0D && i < this.owner.getServerList().countServers() - 1) {
-               this.func_228196_a_(i, i + 1);
-               return true;
+            if(!isFeaturedServer) {
+               if (d0 < 16.0D && d1 < 16.0D && i > 0) {
+                  this.func_228196_a_(i, i - 1);
+                  return true;
+               }
+
+               if (d0 < 16.0D && d1 > 16.0D && i < this.owner.getServerList().countServers() - 1) {
+                  this.func_228196_a_(i, i + 1);
+                  return true;
+               }
             }
          }
 
diff --git a/main/java/net/minecraft/client/multiplayer/ServerDataFeatured.java b/main/java/net/minecraft/client/multiplayer/ServerDataFeatured.java
new file mode 100644
index 0000000..26b3b95
--- /dev/null
+++ b/main/java/net/minecraft/client/multiplayer/ServerDataFeatured.java
@@ -0,0 +1,8 @@
+package net.minecraft.client.multiplayer;
+
+public class ServerDataFeatured extends ServerData {
+
+    public ServerDataFeatured(String name, String ip) {
+        super(name, ip, false);
+    }
+}
diff --git a/main/java/net/minecraft/client/multiplayer/ServerList.java b/main/java/net/minecraft/client/multiplayer/ServerList.java
index 11b16c6..3cd3c86 100644
--- a/main/java/net/minecraft/client/multiplayer/ServerList.java
+++ b/main/java/net/minecraft/client/multiplayer/ServerList.java
@@ -1,8 +1,6 @@
 package net.minecraft.client.multiplayer;
 
 import com.google.common.collect.Lists;
-import java.io.File;
-import java.util.List;
 import net.minecraft.client.Minecraft;
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.nbt.CompressedStreamTools;
@@ -13,6 +11,9 @@ import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import java.io.File;
+import java.util.List;
+
 @OnlyIn(Dist.CLIENT)
 public class ServerList {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -27,6 +28,7 @@ public class ServerList {
    public void loadServerList() {
       try {
          this.servers.clear();
+         loadFeaturedServers();
          CompoundNBT compoundnbt = CompressedStreamTools.read(new File(this.mc.gameDir, "servers.dat"));
          if (compoundnbt == null) {
             return;
@@ -43,12 +45,18 @@ public class ServerList {
 
    }
 
+   private void loadFeaturedServers() {
+      this.addServerData(new ServerDataFeatured("BeyondDark", "beyonddark.de"));
+   }
+
    public void saveServerList() {
       try {
          ListNBT listnbt = new ListNBT();
 
          for(ServerData serverdata : this.servers) {
-            listnbt.add(serverdata.getNBTCompound());
+            if(!(serverdata instanceof ServerDataFeatured)) {
+               listnbt.add(serverdata.getNBTCompound());
+            }
          }
 
          CompoundNBT compoundnbt = new CompoundNBT();
-- 
2.24.1.windows.2

